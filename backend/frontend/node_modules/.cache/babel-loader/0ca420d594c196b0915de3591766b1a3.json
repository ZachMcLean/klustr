{"ast":null,"code":"var _jsxFileName = \"/home/zach/code/test/klustr/frontend/src/components/DragDrop.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport ReactDom from 'react-dom/client';\nimport File from './File';\nimport '../index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst handleFile = e => {\n  const {\n    files\n  } = e.dataTransfer;\n  console.log(files);\n};\nexport default function DragDrop() {\n  _s();\n  // drag state\n  const [dragActive, setDragActive] = React.useState(false);\n  // ref\n  const inputRef = React.useRef(null);\n  const handleDrag = function (e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (e.type === \"dragenter\" || e.type === \"dragover\") {\n      setDragActive(true);\n    } else if (e.type === \"dragleave\") {\n      setDragActive(false);\n    }\n  };\n\n  // triggers when file is dropped\n  const handleDrop = function (e) {\n    e.preventDefault();\n    e.stopPropagation();\n    setDragActive(false);\n    if (e.dataTransfer.files && e.dataTransfer.files[0]) {\n      handleFile(e);\n    }\n  };\n\n  // triggers when files is selected with click \n  const handleChange = function (e) {\n    e.preventDefault();\n    if (e.target.files && e.target.files[0]) {\n      setFile(e.target.files);\n    }\n  };\n\n  // triggers the input when the button is clicked\n  const onButtonClick = () => {\n    inputRef.current.click();\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    id: \"form-file-upload\",\n    onDragEnter: handleDrag,\n    onSubmit: e => e.preventDefault(),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      ref: inputRef,\n      type: \"file\",\n      id: \"input-file-upload\",\n      multiple: true,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      id: \"label-file-upload\",\n      htmlFor: \"input-file-upload\",\n      className: dragActive ? \"drag-active\" : \"\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Drag and Drop your file or\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"upload-button\",\n          onClick: onButtonClick,\n          children: \"Upload a file\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), dragActive && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"drag-file-element\",\n      onDragEnter: handleDrag,\n      onDragLeave: handleDrag,\n      onDragOver: handleDrag,\n      onDrop: handleDrop\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 7\n  }, this);\n}\n_s(DragDrop, \"q8lZwOPeaGjJCupdpVSFIxAae3c=\");\n_c = DragDrop;\n;\nvar _c;\n$RefreshReg$(_c, \"DragDrop\");","map":{"version":3,"names":["React","ReactDom","File","handleFile","e","files","dataTransfer","console","log","DragDrop","dragActive","setDragActive","useState","inputRef","useRef","handleDrag","preventDefault","stopPropagation","type","handleDrop","handleChange","target","setFile","onButtonClick","current","click"],"sources":["/home/zach/code/test/klustr/frontend/src/components/DragDrop.js"],"sourcesContent":["import React from 'react'\nimport ReactDom from 'react-dom/client'\nimport File from './File'\nimport '../index.css'\n\nconst handleFile = (e) => {\n  const {files}=e.dataTransfer;\n  console.log(files);\n};\n\nexport default function DragDrop() {\n\n      // drag state\n    const [dragActive, setDragActive] = React.useState(false);\n      // ref\n    const inputRef = React.useRef(null);\n\n    const handleDrag = function(e) {\n      e.preventDefault();\n      e.stopPropagation();\n      if (e.type === \"dragenter\" || e.type === \"dragover\") {\n        setDragActive(true);\n      } else if (e.type === \"dragleave\") {\n        setDragActive(false);\n      }\n    };\n\n      // triggers when file is dropped\n    const handleDrop = function(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        setDragActive(false);\n        if (e.dataTransfer.files && e.dataTransfer.files[0]) {\n            handleFile(e);\n        }\n    };\n\n        // triggers when files is selected with click \n    const handleChange = function(e) {\n      e.preventDefault();\n      if (e.target.files && e.target.files[0]) {\n        setFile(e.target.files);\n      }\n    };\n\n\n\n        // triggers the input when the button is clicked\n    const onButtonClick = () => {\n       inputRef.current.click();\n    }\n\n    return (\n      <form id=\"form-file-upload\" onDragEnter={handleDrag} onSubmit={(e) => e.preventDefault()}>\n        <input ref={inputRef} type=\"file\" \n            id=\"input-file-upload\" multiple={true} \n            onChange={handleChange} /> \n        <label id=\"label-file-upload\" \n            htmlFor=\"input-file-upload\" \n            className={dragActive ? \"drag-active\" : \"\" \n        }>\n          <div>\n            <p>Drag and Drop your file or</p>\n            <button type=\"button\" className=\"upload-button\" \n                onClick={onButtonClick}>Upload a file</button>\n          </div>\n         </label>\n           { dragActive && <div id=\"drag-file-element\" onDragEnter={handleDrag} \n                    onDragLeave={handleDrag} onDragOver={handleDrag} \n                    onDrop={handleDrop}></div>}\n      </form>\n    );\n};\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}